- introduced = fixed = []
- if tsr = commit.test_suite_runs.order('created_at DESC').first
- state = commit.build_state
- if parent = commit.parent
  -# if tsr && parent.test_suite_runs.first
    -# parent_errors =  parent.test_suite_runs.first.test_unit_runs.with_error
    -# my_errors = tsr.test_unit_runs.with_error
    -# introduced = my_errors.map(&:test_unit) - parent_errors.map(&:test_unit)
    -# fixed = parent_errors.map(&:test_unit) - my_errors.map(&:test_unit)
    -# state = 'ok' if introduced.size == 0 && state == 'bad'

%div{:class => "commit #{state}"}
  .info_part{:style => 'min-height: 90px;'}
    .avatar{:style => 'float: left; padding-right: 15px;'}
      = image_tag(commit.author.gravatar_url)
    .results{:style => 'float: right; text-align: right; padding-left: 10px'}
      %span{:class => commit.build_state}= commit.build_state.upcase
      %br
      - if state == 'preparation_failed'
        = link_to_longtext 'details', commit.project_instance_commits.where(:state => 'preparation_failed').first.preparation_log
      - elsif commit.prepared?
        = link_to 'prep log', '#'
      - else
        %i waiting for prepration
    %tt.title
      = link_to_p commit.description, :action => 'show', :id => commit.id
    (
    = link_to commit.number[0..6], "https://github.com/tech-angels/betnet/commit/#{commit.number}"
    )
    -# FIXME DEBUG
    = commit.id
    %br
    %br
    Author:
    %b= commit.author.name
    %br
    Time:
    %b
      = time_ago_in_words commit.committed_at
      ago
    %br

  - commit.test_suite_runs.finished.includes(:test_suite).order('test_suites.created_at').group_by(&:test_suite).each do |ts, tsrs|
    - prev_tsr = nil
    - prev_tsr = parent.test_suite_runs.where(:test_suite_id => ts.id).first if parent

    %b= "#{ts.name}:"
    - tsr = tsrs.first
    - random_errors = tsr.random_errors
    %b= tsr.tests_count
    - if prev_tsr && (diff = prev_tsr.tests_count.to_i - tsr.tests_count.to_i) != 0
      (
      - if diff > 0
        %span.red= "-#{diff}"
      - else
        %span.green= "+#{diff.abs}"
      )
    tests,
    %b= tsr.assertions_count
    assertions,
    = bad_value tsr.errors_count
    errors,
    = bad_value tsr.failures_count
    failures
    (
    = link_to_function 'details', "$('#run_details_#{commit.id}_#{ts.id}').show();"
    )
    %br

    %div{:id => "run_details_#{commit.id}_#{ts.id}", :style => "display: none;"}
      %br
      = render :partial => '/test_suite_runs/list', :locals => {:test_suite_runs => tsrs}

    - if prev = tsr.previous_run
      - prandom = tsr.possibly_random
      %ul
        - new_errors = tsr.new_errors
        - (tsr.gone_errors - prandom).each do |tu|
          %li.green
            %span.green FIXED
            %b= tu.class_name
            = tu.name
        - (tsr.errors - prandom).each do |tu|
          %li
            - if new_errors.include? tu
              %span.red INTRODUCED
            - else
              %b FAILED
            %b= tu.class_name
            = tu.name
        - tsr.random_errors.each do |tu,probability|
          %li.warn
            %span.orange RANDOM (#{probability.round(2)*100}%)
            %b= tu.class_name
            = tu.name
        - (tsr.errors & (prandom - tsr.random_errors.map(&:first))).each do |tu|
          %li.warn
            %span.orange POSSIBLY RANDOM
            %b= tu.class_name
            = tu.name
