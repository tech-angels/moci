%h1 Latest commits


- @commits.each do |commit|
  %br
  - introduced = fixed = []
  - if tsr = commit.test_suite_runs.order('created_at DESC').first
    -#- if tsr.running?
      -#- state = 'running'
    -#- else
      -#- if tsr.clean?
        -#- state = 'clean'
      -#- else
        -#- state = 'bad'
  -#- else
    -#- state = 'pending'
  - state = commit.build_state
  - if parent = commit.parent
    -# if tsr && parent.test_suite_runs.first
      -# parent_errors =  parent.test_suite_runs.first.test_unit_runs.with_error
      -# my_errors = tsr.test_unit_runs.with_error
      -# introduced = my_errors.map(&:test_unit) - parent_errors.map(&:test_unit)
      -# fixed = parent_errors.map(&:test_unit) - my_errors.map(&:test_unit)
      -# state = 'ok' if introduced.size == 0 && state == 'bad'

  %div{:class => "commit #{state}"}
    .info_part{:style => 'min-height: 90px;'}
      .avatar{:style => 'float: left; padding-right: 15px;'}
        = image_tag(commit.author.gravatar_url)
      .results{:style => 'float: right; text-align: right; padding-left: 10px'}
        %span{:class => commit.build_state}= commit.build_state.upcase
        %br
        - if commit.prepared?
          = link_to 'prep log', '#'
        - else
          %i waiting for prepration
      %tt
        =commit.description
      (
      = link_to commit.number[0..6], "https://github.com/tech-angels/betnet/commit/#{commit.number}"
      )
      -# FIXME DEBUG
      = commit.id
      %br
      %br
      Author:
      %b= commit.author.name
      %br
      Time:
      %b
        = time_ago_in_words commit.committed_at
        ago
      %br

    - unless %{running pending}.include? commit.build_state

      - commit.test_suite_runs.finished.includes(:test_suite).group_by(&:test_suite).each do |ts, tsrs|
        - prev_tsr = nil
        - prev_tsr = parent.test_suite_runs.where(:test_suite_id => ts.id).first if parent

        %b= "#{ts.name}:"
        - tsr = tsrs.first
        - random_errors = tsr.random_errors
        %b= tsr.tests_count
        - if prev_tsr && (diff = prev_tsr.tests_count.to_i - tsr.tests_count.to_i) != 0
          (
          - if diff > 0
            %span.red= "-#{diff}"
          - else
            %span.green= "+#{diff.abs}"
          )
        tests,
        %b= tsr.assertions_count
        - if prev_tsr && (diff = prev_tsr.assertions_count.to_i - tsr.assertions_count.to_i) != 0
          (
          - if diff > 0
            %span.red= "-#{diff}"
          - else
            %span.green= "+#{diff.abs}"
          )
        assertions,
        - if tsr.errors_count.to_i > 0
          %b= tsr.errors_count
          errors,
        - if tsr.failures_count.to_i > 0
          %b= tsr.failures_count
          failures
        (
        = raw tsrs.map { |tsr| link_to('log', :controller => :test_suite_runs, :action => :show, :id => tsr.id) }.join(',')
        )

        - if prev = tsr.previous_run
          %ul
            - new_errors = tsr.new_errors
            - (tsr.gone_errors - random_errors.map(&:first)).each do |tu|
              %li.green
                %span.green FIXED
                %b= tu.class_name
                = tu.name
            - (tsr.errors - random_errors.map(&:first)).each do |tu|
              %li
                - if new_errors.include? tu
                  %span.red INTRODUCED
                - else
                  %b FAILED
                %b= tu.class_name
                = tu.name
            - random_errors.each do |tu,probability|
              %li.warn
                %span.orange RANDOM (#{probability.round(2)*100}%)
                %b= tu.class_name
                = tu.name


= will_paginate @commits
